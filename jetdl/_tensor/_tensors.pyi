from typing import Union, TypeAlias

from .._C import TensorBase

Numeric : TypeAlias = Union[int, float, list[int, float]] 

class Tensor(TensorBase):
    _data:list[int]
    ndim:int
    shape:tuple[int]
    size:int
    strides:tuple[int]
    
    def __add__(self: "Tensor", other: Numeric) -> "Tensor": ...
    def __radd__(self: "Tensor", other: Numeric) -> "Tensor": ...

    def __sub__(self: "Tensor", other: Numeric) -> "Tensor": ...
    def __rsub__(self: "Tensor", other: Numeric) -> "Tensor": ... 

    def __mul__(self: "Tensor", other: Numeric) -> "Tensor": ...
    def __rmul__(self: "Tensor", other: Numeric) -> "Tensor": ...

    def __div__(self: "Tensor", other: Numeric) -> "Tensor": ...
    def __rdiv__(self: "Tensor", other: Numeric) -> "Tensor": ...

    def __matmul__(self: "Tensor", other: "Tensor") -> "Tensor": ...
    
    @property
    def T(self: "Tensor") -> "Tensor": ...
    @property
    def mT(self: "Tensor") -> "Tensor": ...

def tensor(data: Numeric) -> Tensor: ...
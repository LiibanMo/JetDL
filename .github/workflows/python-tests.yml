name: Run JetDL Tests

on:
  push:
    branches:
      - main
      - dev
      - dev2
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test on ${{ matrix.runner }} with Python ${{ matrix.python-version }}
    strategy:
      matrix:
        runner:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - 3.11
          - 3.12
          - 3.13

    runs-on: ${{ matrix.runner }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --- Windows Stability Workaround ---
      - name: Set PIP_NO_INPUT (Windows Workaround)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          Write-Host "Setting PIP_NO_INPUT=1 and PIP_RETRIES=5 to stabilize pip on Windows runner..."
          echo "PIP_NO_INPUT=1" | Out-File -FilePath $env:GITHUB_ENV -Encoding UTF8 -Append
          echo "PIP_RETRIES=5" | Out-File -FilePath $env:GITHUB_ENV -Encoding UTF8 -Append

      # --- Conda Setup (Unified Dependencies for ALL OS) ---
      - name: Setup Miniconda Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          # We use standard conda for simplicity and avoid mamba dependency
          use-mamba: false
          miniconda-version: "latest"
          channels: conda-forge, defaults
          # Create and activate an environment named 'test-env'
          activate-environment: test-env
          # Note: The 'packages' input is intentionally omitted here.
          
      - name: Install Python and C++ Build Dependencies (Manual Conda Install)
        shell: bash
        run: |
          # Use the activated environment to install all required packages manually.
          conda install -y -c conda-forge \
            python=${{ matrix.python-version }} \
            llvm \
            clang \
            openblas \
            cmake
            
      # --- Configure CMake Prefix Path ---
      # This step tells CMake where to look for Conda-installed packages.
      - name: Set CMAKE_PREFIX_PATH
        shell: bash
        run: |
          echo "Setting CMAKE_PREFIX_PATH to $CONDA_PREFIX"
          echo "CMAKE_PREFIX_PATH=$CONDA_PREFIX" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          pip install -U pip
          pip install -r requirements.txt --progress-bar off
          
      - name: Build shared library(s)
        run: |
          echo "Starting C++ build in Conda environment."
          pip install -e . --progress-bar off
          
      - name: Run tests
        run: |  
          pytest -v --disable-warnings